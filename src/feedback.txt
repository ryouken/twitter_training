8/9 First Review
セッションからユーザIDを引っ張っている処理が冗長している。
処理を切り出して、メンテナンス性を担保しよう。クラス作ってもメソッドでもいい。

コントローラーにロジックが入っているのが気になる。
ビジネスロジックの部分はservices層に。
基本的にコントローラはフォームからデータを受けてサービスに上げるみたいな。
リクエスト、レスポンス、HTTP通信をコントローラ。

UserServiceの下にfindメソッドとか作って一見取得できるようにするとか。
機能をどんどん使いまわせるように切り出してあげる。

セッションの管理をちゃんとしましょう。切れた時に落ちていいのか。
APIはクッキーでやらない。
ユーザIDを取る処理はgetしない。当たり前。
Google Authとか使ってもいいかもね。でも微妙か。

バリデーションエラーをもっと親切に出さないとクライアント側でわかんなくない？
これいつやろう？

GET POST PUT DELETEをしっかりやってもいいよ
APIサーバーは特に。メソッドから何するかわかりやすい。

チェックできるところはサーバサイドもクライアントサイドもできればいい。

8/17 Second Review
editに最初っから入れるみたいなことしてない。これやらないと。

URLを別に書き出す。
httpRequestを別に書き出す。

!は基本的に使わない。

もらったjsonがstring string?ってのはおかしい。

型推論をしてくれる部分と違う部分と考えないといけない。

なるべく破られないセキュリティ	